// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Workers.Data;

#nullable disable

namespace Workers.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240403150421_C")]
    partial class C
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Workers.Core.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsAdministrative")
                        .HasColumnType("bit");

                    b.Property<int>("NameId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartRole")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NameId");

                    b.HasIndex("WorkerId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Workers.Core.Entities.TagRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Workers.Core.Entities.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartWorking")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TagRoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TagRoleId");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("Workers.Core.Entities.Role", b =>
                {
                    b.HasOne("Workers.Core.Entities.TagRole", "Name")
                        .WithMany()
                        .HasForeignKey("NameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Workers.Core.Entities.Worker", null)
                        .WithMany("RolesList")
                        .HasForeignKey("WorkerId");

                    b.Navigation("Name");
                });

            modelBuilder.Entity("Workers.Core.Entities.Worker", b =>
                {
                    b.HasOne("Workers.Core.Entities.TagRole", null)
                        .WithMany("Workers")
                        .HasForeignKey("TagRoleId");
                });

            modelBuilder.Entity("Workers.Core.Entities.TagRole", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("Workers.Core.Entities.Worker", b =>
                {
                    b.Navigation("RolesList");
                });
#pragma warning restore 612, 618
        }
    }
}
